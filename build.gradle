plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-${project.minecraft_version}"
group = "Gaider10"

repositories {
	mavenCentral()
	maven { url = uri("https://maven.shedaniel.me/") }
	maven { url = uri("https://maven.terraformersmc.com/releases/") }
	maven {
		name = "Terraformers"
		url = uri("https://maven.terraformersmc.com/")
	}
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = uri("https://api.modrinth.com/maven")
			}
		}
		filter {
			includeGroup("maven.modrinth")
		}
	}
	maven {
		name "ladysnake"
		url "https://maven.ladysnake.org/releases"
	}

	maven { url = "https://jitpack.io" }

	maven { url = "https://maven.quiltmc.org/repository/release/" }

}

dependencies {
	minecraft "com.mojang:minecraft:$project.minecraft_version"

	mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${mappings_version}:intermediary-v2")
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"

	// Replace modImplementation with modApi if you expose components in your own API
	modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")

	modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")

	modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cca_version}")

	include(modImplementation("maven.modrinth:midnightlib:1.6.3-fabric"))

}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("quilt.mod.json") {
		expand "version": project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}